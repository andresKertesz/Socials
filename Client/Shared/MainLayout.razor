@using Socials.Client.Client.Controllers;
@inherits LayoutComponentBase
@inject ComponentController componentController
@inject AuthenticationController userController
<div class="page">

    @if (componentController.ShowNavBar)
    {
        <div class="sidebar sidebarColor">
            <NavMenu mainLayout="this"/>
        </div>
    }
    else
    {
        <div class="toggledSidebar sidebarColor">
            <ToggledNavMenu mainLayout="this" />
        </div>
    }


    <main style="background-color: #f5f5f5;">
        <div class="top-row px-4 menuColor">
            <div class="col-11">

                <RadzenHeading Style="margin-top: 10px; color: antiquewhite" Text="@componentController.CurrentPageTitle"></RadzenHeading>

            </div>
            <div class="col-1">

                <LogInButton UserController="@userController"></LogInButton>
            
            </div>
        </div>
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<RadzenDialog />
<RadzenNotification />
<RadzenContextMenu />
<RadzenTooltip />

<style>
    .menuColor{
        background: rgb(2,0,36);
        background: linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(9,9,121,1) 10%, rgba(0,212,255,1) 100%);
    }
</style>

@code{
    protected override void OnInitialized()
    {
        componentController.OnTitleChanged += StateHasChanged;
        base.OnInitialized();
    }
    public void RefreshState()
    {
        this.StateHasChanged();
    }

     public void Dispose()
    {
        componentController.OnTitleChanged -= StateHasChanged;
    }



    protected override Task OnParametersSetAsync()
    {

        return base.OnParametersSetAsync();
    }
    private string TabTitle{ get; set; }

}